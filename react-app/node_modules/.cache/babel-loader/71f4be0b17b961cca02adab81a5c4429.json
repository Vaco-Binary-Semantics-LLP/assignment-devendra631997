{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_PLAYERS, UPDATE_PLAYERS, FETCH_TEAM, UPDATE_TEAM } from \"./type\";\nvar server = \"http://localhost:8080/\";\nexport function fetchPlayers() {\n  return function (dispatch) {\n    try {\n      axios.get(`http://localhost:8080/team`).then(response => {\n        var manupulate = [];\n        const p = response.data; // p.map(ele=>\n        //   ele.player(element=>{\n        //     manupulate.push({\n        //       \"team\":ele,\n        //       \"player\":element\n        //     })\n        //   })\n        // )\n        // console.log(p)\n\n        dispatch({\n          type: FETCH_PLAYERS,\n          payload: p\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function updatePlayers() {\n  return function (dispatch) {\n    try {\n      axios.get(`${server}/player`).then(response => {\n        const player = response.data.data.signals; // console.log(status);\n\n        dispatch({\n          type: UPDATE_PLAYERS,\n          payload: player\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function fetchTeam() {\n  return function (dispatch) {\n    try {\n      axios.get(`http://localhost:8080/team`).then(response => {\n        const team = response.data; // console.log(\"inreduced\",team);\n\n        dispatch({\n          type: FETCH_TEAM,\n          payload: team\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function updateTeam() {\n  return function (dispatch) {\n    try {\n      axios.get(`${server}/team`).then(response => {\n        const team = response.data.data.signals; // console.log(status);\n\n        dispatch({\n          type: UPDATE_TEAM,\n          payload: team\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"sources":["/home/devendra/Downloads/assignment-devendra631997/react-app/src/action/index.js"],"names":["axios","FETCH_PLAYERS","UPDATE_PLAYERS","FETCH_TEAM","UPDATE_TEAM","server","fetchPlayers","dispatch","get","then","response","manupulate","p","data","type","payload","error","console","log","updatePlayers","player","signals","fetchTeam","team","updateTeam"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACAC,aADA,EAEAC,cAFA,EAGAC,UAHA,EAIAC,WAJA,QAKO,QALP;AAMA,IAAIC,MAAM,GAAG,wBAAb;AAGA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAO,UAAUC,QAAV,EAAoB;AACzB,QAAI;AACFP,MAAAA,KAAK,CACJQ,GADD,CACM,4BADN,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAIC,UAAU,GAAG,EAAjB;AACA,cAAMC,CAAC,GAAGF,QAAQ,CAACG,IAAnB,CAFkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAN,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEb,aADC;AAEPc,UAAAA,OAAO,EAAEH;AAFF,SAAD,CAAR;AAID,OAnBH;AAoBD,KArBD,CAqBE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAzBD;AA0BD;AAEH,OAAO,SAASG,aAAT,GAAyB;AAC5B,SAAO,UAAUZ,QAAV,EAAoB;AACzB,QAAI;AACFP,MAAAA,KAAK,CACFQ,GADH,CACQ,GAAEH,MAAO,SADjB,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,cAAMU,MAAM,GAAGV,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBQ,OAAlC,CADkB,CAElB;;AACAd,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEZ,cADC;AAEPa,UAAAA,OAAO,EAAEK;AAFF,SAAD,CAAR;AAID,OATH;AAUD,KAXD,CAWE,OAAOJ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAfD;AAgBD;AAED,OAAO,SAASM,SAAT,GAAqB;AAC1B,SAAO,UAAUf,QAAV,EAAoB;AACzB,QAAI;AACFP,MAAAA,KAAK,CACFQ,GADH,CACQ,4BADR,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,cAAMa,IAAI,GAAGb,QAAQ,CAACG,IAAtB,CADkB,CAElB;;AACAN,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEX,UADC;AAEPY,UAAAA,OAAO,EAAEQ;AAFF,SAAD,CAAR;AAID,OATH;AAUD,KAXD,CAWE,OAAOP,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAfD;AAgBD;AAED,OAAO,SAASQ,UAAT,GAAsB;AACzB,SAAO,UAAUjB,QAAV,EAAoB;AACzB,QAAI;AACFP,MAAAA,KAAK,CACFQ,GADH,CACQ,GAAEH,MAAO,OADjB,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClB,cAAMa,IAAI,GAAGb,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBQ,OAAhC,CADkB,CAElB;;AACAd,QAAAA,QAAQ,CAAC;AACPO,UAAAA,IAAI,EAAEV,WADC;AAEPW,UAAAA,OAAO,EAAEQ;AAFF,SAAD,CAAR;AAID,OATH;AAUD,KAXD,CAWE,OAAOP,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAfD;AAgBD","sourcesContent":["import axios from \"axios\";\nimport {\nFETCH_PLAYERS,\nUPDATE_PLAYERS,\nFETCH_TEAM,\nUPDATE_TEAM,\n} from \"./type\";\nvar server = \"http://localhost:8080/\"\n\n\nexport function fetchPlayers() {\n    return function (dispatch) {\n      try {\n        axios\n        .get(`http://localhost:8080/team`)\n          .then((response) => {\n            var manupulate = []\n            const p = response.data;\n            // p.map(ele=>\n            //   ele.player(element=>{\n            //     manupulate.push({\n            //       \"team\":ele,\n            //       \"player\":element\n            //     })\n            //   })\n            // )\n\n            // console.log(p)\n            dispatch({\n              type: FETCH_PLAYERS,\n              payload: p,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\nexport function updatePlayers() {\n    return function (dispatch) {\n      try {\n        axios\n          .get(`${server}/player`)\n          .then((response) => {\n            const player = response.data.data.signals;\n            // console.log(status);\n            dispatch({\n              type: UPDATE_PLAYERS,\n              payload: player,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  export function fetchTeam() {\n    return function (dispatch) {\n      try {\n        axios\n          .get(`http://localhost:8080/team`)\n          .then((response) => {\n            const team = response.data;\n            // console.log(\"inreduced\",team);\n            dispatch({\n              type: FETCH_TEAM,\n              payload: team,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n  \n  export function updateTeam() {\n      return function (dispatch) {\n        try {\n          axios\n            .get(`${server}/team`)\n            .then((response) => {\n              const team = response.data.data.signals;\n              // console.log(status);\n              dispatch({\n                type: UPDATE_TEAM,\n                payload: team,\n              });\n            });\n        } catch (error) {\n          console.log(error);\n        }\n      };\n    }\n  "]},"metadata":{},"sourceType":"module"}