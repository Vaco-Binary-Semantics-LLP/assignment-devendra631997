{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_PLAYERS, UPDATE_PLAYERS, FETCH_TEAM, UPDATE_TEAM } from \"./type\";\nvar server = \"http://localhost:8080/\";\nexport function fetchPlayers() {\n  return function (dispatch) {\n    try {\n      axios.get(`http://localhost:8080/team`).then(response => {\n        const p = response.data;\n        dispatch({\n          type: FETCH_PLAYERS,\n          payload: p\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function deletePlayers(obj) {\n  return function (dispatch) {\n    try {\n      axios.put(`http://localhost:8080/team`, obj).then(response => {\n        const player = response.data; // console.log(status);\n\n        dispatch({\n          type: FETCH_TEAM,\n          payload: player\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function fetchTeam() {\n  return function (dispatch) {\n    try {\n      axios.get(`http://localhost:8080/team`).then(response => {\n        const team = response.data; // console.log(\"inreduced\",team);\n\n        dispatch({\n          type: FETCH_TEAM,\n          payload: team\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function addTeam(str) {\n  return function (dispatch) {\n    try {\n      axios.post(`http://localhost:8080/team`, {\n        data: {\n          title: str\n        }\n      }).then(response => {\n        const team = response.data; // console.log(\"inreduced\",team);\n\n        dispatch({\n          type: FETCH_TEAM,\n          payload: team\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function deleteTeam(id) {\n  return function (dispatch) {\n    try {\n      axios.delete(`http://localhost:8080/team`, {\n        data: {\n          \"id\": id\n        }\n      }).then(response => {\n        const team = response.data; // console.log(\"inreduced\",team);\n\n        dispatch({\n          type: FETCH_TEAM,\n          payload: team\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function updateTeam() {\n  return function (dispatch) {\n    try {\n      axios.get(`${server}/team`).then(response => {\n        const team = response.data.data.signals; // console.log(status);\n\n        dispatch({\n          type: UPDATE_TEAM,\n          payload: team\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"sources":["/home/devendra/Downloads/assignment-devendra631997/react-app/src/action/index.js"],"names":["axios","FETCH_PLAYERS","UPDATE_PLAYERS","FETCH_TEAM","UPDATE_TEAM","server","fetchPlayers","dispatch","get","then","response","p","data","type","payload","error","console","log","deletePlayers","obj","put","player","fetchTeam","team","addTeam","str","post","title","deleteTeam","id","delete","updateTeam","signals"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\nFETCH_PLAYERS,\nUPDATE_PLAYERS,\nFETCH_TEAM,\nUPDATE_TEAM,\n} from \"./type\";\nvar server = \"http://localhost:8080/\"\n\n\nexport function fetchPlayers() {\n    return function (dispatch) {\n      try {\n        axios\n        .get(`http://localhost:8080/team`)\n          .then((response) => {\n            const p = response.data;\n            dispatch({\n              type: FETCH_PLAYERS,\n              payload: p,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\nexport function deletePlayers(obj) {\n    return function (dispatch) {\n      try {\n        axios\n          .put(`http://localhost:8080/team`,obj)\n          .then((response) => {\n            const player = response.data;\n            // console.log(status);\n            dispatch({\n              type: FETCH_TEAM,\n              payload: player,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  export function fetchTeam() {\n    return function (dispatch) {\n      try {\n        axios\n          .get(`http://localhost:8080/team`)\n          .then((response) => {\n            const team = response.data;\n            // console.log(\"inreduced\",team);\n            dispatch({\n              type: FETCH_TEAM,\n              payload: team,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  export function addTeam(str) {\n    return function (dispatch) {\n      try {\n        axios\n          .post(`http://localhost:8080/team`,{data:{ title: str }})\n          .then((response) => {\n            const team = response.data;\n            // console.log(\"inreduced\",team);\n            dispatch({\n              type: FETCH_TEAM,\n              payload: team,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  export function deleteTeam(id) {\n    return function (dispatch) {\n      try {\n        axios\n          .delete(`http://localhost:8080/team`,{data:{ \"id\": id }})\n          .then((response) => {\n            const team = response.data;\n            // console.log(\"inreduced\",team);\n            dispatch({\n              type: FETCH_TEAM,\n              payload: team,\n            });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n  \n  export function updateTeam() {\n      return function (dispatch) {\n        try {\n          axios\n            .get(`${server}/team`)\n            .then((response) => {\n              const team = response.data.data.signals;\n              // console.log(status);\n              dispatch({\n                type: UPDATE_TEAM,\n                payload: team,\n              });\n            });\n        } catch (error) {\n          console.log(error);\n        }\n      };\n    }\n  "]},"metadata":{},"sourceType":"module"}